# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, JohnZhao
# This file is distributed under the same license as the MYNT® EYE SDK Guide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MYNT® EYE SDK Guide 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-08 21:54+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../src/slam/okvis.rst:4
msgid "`OKVIS <https://github.com/ethz-asl/okvis>`_ 如何整合"
msgstr "How to use in `OKVIS <https://github.com/ethz-asl/okvis>`_ "

#: ../../src/slam/okvis.rst:7
msgid "在 MYNT® EYE 上运行 OKVIS ，请依照这些步骤："
msgstr "If you wanna run OKVIS with MYNT EYE camera, please follow the steps:"

#: ../../src/slam/okvis.rst:9
msgid ""
"下载 `MYNT-EYE-S-SDK <https://github.com/slightech/MYNT-EYE-S-SDK.git>`_ "
"并安装。"
msgstr ""
"Download `MYNT-EYE-S-SDK <https://github.com/slightech/MYNT-EYE-"
"S-SDK.git>`_ and install it."

#: ../../src/slam/okvis.rst:10
msgid "安装依赖，按照原始 OKVIS 步骤安装 MYNT-EYE-OKVIS-Sample 。"
msgstr ""
"Install dependencies and build MYNT-EYE-OKVIS-Sample follow the procedure"
" of the original OKVIS."

#: ../../src/slam/okvis.rst:11
msgid "更新相机参数到 ``<OKVIS>/config/config_mynteye.yaml``。"
msgstr "Update camera parameters to ``<OKVIS>/config/config_mynteye.yaml``."

#: ../../src/slam/okvis.rst:12
msgid "在 MYNT® EYE 上运行 OKVIS 。"
msgstr "Run OKVIS using MYNT® EYE."

#: ../../src/slam/okvis.rst:15
msgid "安装 MYNT® EYE OKVIS"
msgstr "Install MYNTEYE OKVIS"

#: ../../src/slam/okvis.rst:17
msgid "首先安装原始 OKVIS 及依赖："
msgstr "First install dependencies based on the original OKVIS, and the follow:"

#: ../../src/slam/okvis.rst:27
msgid "获取相机校准参数"
msgstr "Get camera calibration parameters"

#: ../../src/slam/okvis.rst:29
msgid ""
"通过 `MYNT-EYE-S-SDK <https://github.com/slightech/MYNT-EYE-S-SDK.git>`_ "
"API 的 ``GetIntrinsics()`` 函数和 ``GetExtrinsics()`` 函数，可以获得当前工作设备的图像校准参数："
msgstr ""
"Through the ``GetIntrinsics()`` and ``GetExtrinsics()`` function of the "
"`MYNT-EYE-S-SDK <https://github.com/slightech/MYNT-EYE-S-SDK.git>`_ API, "
"you can get the camera calibration parameters of the currently open "
"device, follow the steps:"

#: ../../src/slam/okvis.rst:36
msgid ""
"这时，可以获得针孔模型下的 ``distortion_parameters`` 和 ``projection_parameters`` "
"参数，然后在 `这里 <https://github.com/slightech/MYNT-EYE-OKVIS-"
"Sample/blob/mynteye-s/config/config_mynteye.yaml>`_ 更新。"
msgstr ""
"After running the above type, pinhole's ``distortion_parameters`` and "
"``projection_parameters`` is obtained, then update to `here "
"<https://github.com/slightech/MYNT-EYE-OKVIS-"
"Sample/blob/mynteye-s/config/config_mynteye.yaml>`_ ."

#: ../../src/slam/okvis.rst:39
msgid "运行 MYNT® EYE OKVIS"
msgstr "Run MYNTEYE OKVIS"

#: ../../src/slam/okvis.rst:41
msgid "在 ``MYNT-EYE-OKVIS-Sample/build`` 中运行 ``okvis_app_mynteye_s`` :"
msgstr ""
"Go to ``MYNT-EYE-OKVIS-Sample/build`` folder and Run the application "
"``okvis_app_mynteye_s`` :"

